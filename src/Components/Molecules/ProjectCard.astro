---
import Button from "@components/Atoms/Button/Button";
import ParagraphLayout from "@layouts/ParagraphLayout.astro";
import StackOption from "@components/Atoms/StackOption.astro";
import Tooltip from "@components/Atoms/Tooltip.astro";

interface Props {
  projectCard: {
    index: number;
    title: string;
    date: string;
    type: string;
    project: string;
    image: string;
    description: string;
    github: string;
    link: string;
    stack: string[];
  };
}
const { projectCard } = Astro.props as Props;
const { title, date, type, project, image, description, github, link, stack } =
  projectCard;
---

<div class="project__card">
  <div class="project__card-info">
    <div>
      <div class="project__card-title">
        {title}
      </div>
      <div class="project__card-info-btns">
        <Button label={date} variant="neutral" />
        <Button label={`${project} project`} variant="neutral" />
        <Button variant={type} />
      </div>
    </div>
    <div class="project__card-paragraph">
      <ParagraphLayout>
        {description}
      </ParagraphLayout>
    </div>
    <div class="project__card-bottom-container">
      <div class="project__card-link-btns">
        {
          github ? (
            <a href={github} target="_blank">
              <Button variant="border" label="github">
              </Button>
            </a>
          ) : (
            <Button variant="border" label="github" flashMessage client:visible>
            </Button>
          )
        }
       
        {
          link && (
            <a href={link} target="_blank">
              <Button variant="solid" label="visit" client:visible/>
            </a>
          )
        }
      </div>
      <div class="project__card-softwares">
        {
          stack.map((software) => (
            <Tooltip software={software}>
              <StackOption logo={software} />
            </Tooltip>
          ))
        }
      </div>
    </div>
  </div>
  <div class="project__card-img">
    <img src={`projectImgs/${image}.webp`} alt={`${title}-Project`} />
  </div>
</div>

<style lang="scss">
  @use "@styles/abstracts" as *;
  .project__card {
    height: max-content;
    width: 100%;
    background-color: var(--c-secondary);
    border-radius: 12px;
    padding: 16px 12px;
    display: flex;
    column-gap: 24px;
    @include breakpoint-down(medium) {
      padding: 28px 20px;
    }
    @include breakpoint-down(x-small) {
      padding: 24px 12px;
    }

    &-info {
      display: flex;
      flex-direction: column;
      row-gap: 24px;
    }

    &-title {
      font-family: Cabin;
      font-weight: 500;
      font-size: 32px;
      line-height: 40px;
      color: var(--c-f-white);
      text-transform: capitalize;
      @include breakpoint-down(large) {
        text-align: center;
        line-height: 36px;
        font-size: 28px;
      }
      @include breakpoint-down(large) {
        line-height: 32px;
        font-size: clamp(1.38rem, calc(0.95rem + 2.14vw), 1.75rem);
      }
    }
    &-paragraph {
      @include breakpoint-down(large) {
        text-align: center;
      }
    }
    &-bottom-container {
      display: flex;
      justify-content: space-between;
      row-gap: 24px;
      column-gap: 12px;
      flex-wrap: wrap;
      align-items: center;
      @include breakpoint-down(large) {
        flex-direction: column-reverse;
      }
      @include breakpoint-down(medium) {
        flex-direction: row;
      }
      @include breakpoint-down(small) {
        flex-direction: column-reverse;
      }
    }

    &-info-btns {
      display: flex;
      column-gap: 16px;
      flex-wrap: wrap;
      margin-top: 24px;
      row-gap: 12px;
      @include breakpoint-down(large) {
        justify-content: center;
      }
    }

    &-link-btns {
      display: flex;
      column-gap: 16px;
    }

    &-softwares {
      display: flex;
      column-gap: 16px;
      z-index: 10;
      position: relative;
    }

    &-img {
      min-width: 360px;
      height: auto;
      border-radius: 8px;
      overflow: hidden;
      & > img {
        width: 100%;
        height: 100%;
        object-fit: cover;

      }
      @include breakpoint-down(medium) {
        display: none;
      }
    }
  }
</style>
